/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M17
 * Generated at: 2017-06-19 04:21:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.css;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class api_005freference_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<section id=\"reference\">\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"row\">\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"sec-title text-center wow animated fadeInDown\">\n");
      out.write("\t\t\t\t<h2>Open API references</h2>\n");
      out.write("\t\t\t\t<p>사고정보를 지역, 시간, 사고유형 등의 조건을 통해 조회합니다.</p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<table class=\"table table-bordered wow animated fadeInRight\">\n");
      out.write("\t\t\t\t<tr class=\"success\">\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<th>응답필드</th>\n");
      out.write("\t\t\t\t\t<th>값</th>\n");
      out.write("\t\t\t\t\t<th>설명</th>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>serialnum</td>\n");
      out.write("\t\t\t\t\t<td>문자열</td>\n");
      out.write("\t\t\t\t\t<td>제품 module의 고유번호</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>latitude</td>\n");
      out.write("\t\t\t\t\t<td>문자열</td>\n");
      out.write("\t\t\t\t\t<td>사건 발생 위도</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>longitude</td>\n");
      out.write("\t\t\t\t\t<td>문자열</td>\n");
      out.write("\t\t\t\t\t<td>사건 발생 경도</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>atime</td>\n");
      out.write("\t\t\t\t\t<td>문자열</td>\n");
      out.write("\t\t\t\t\t<td>사건 발생 시간</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>status</td>\n");
      out.write("\t\t\t\t\t<td>문자열</td>\n");
      out.write("\t\t\t\t\t<td>사건 해결 여부 (occured: 사고발생, processing: 조치진행중, solved:사고해결)</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t<p><Strong>JSON 요청 URL :</Strong> http://52.231.26.49:8080/web/json/datas\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<p><Strong>Example(예제) : </Strong>\n");
      out.write("\t\t\t{\"totalAccidents\":[{\"serialnum\":\"SF16061500\",\"latitude\":37.398336,\"longitude\":127.104655,\"atime\":\"2017.06.15/09:09\",\"status\":\"processing\"},{\"serialnum\":\"SF16061501\",\"latitude\":37.408129,\"longitude\":127.115277,\"atime\":\"2017.06.15/09:10\",\"status\":\"occured\"},{\"serialnum\":\"SF17060800\",\"latitude\":37.4,\"longitude\":127.11,\"atime\":\"2017.06.16/10:01\",\"status\":\"occured\"}]}\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t위와 같이 Json 형태가 구성되어있다. URI 내용을 String에 담아, totalAccidents안의 배열을 사용하면 된다. </p>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<p><Strong>Ajax, JQuery로 사용하는 방법</Strong> <br>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.getJSON('http://52.231.26.49:8080/web/json/datas', function(data) {\n");
      out.write("\t\t\tconsole.log(data.totalAccidents[0].latitude);\n");
      out.write("\t\t\tconsole.log(data.totalAccidents[0].longitude);\n");
      out.write("\t\t\t}</p>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t</section>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
