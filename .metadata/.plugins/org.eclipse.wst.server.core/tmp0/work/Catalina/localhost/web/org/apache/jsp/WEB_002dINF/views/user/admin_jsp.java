/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M17
 * Generated at: 2017-06-19 04:29:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;

public final class admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/Users/OKSU/Desktop/S2_Secondary-Safe_KostaFinal/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/web/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-3.1.0.RELEASE.jar", Long.valueOf(1497504086000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1496370362000L));
    _jspx_dependants.put("jar:file:/Users/OKSU/Desktop/S2_Secondary-Safe_KostaFinal/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/web/WEB-INF/lib/spring-security-taglibs-3.1.0.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1323087896000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/css/head2.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tconsole.log(\"hello\");\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$\n");
      out.write("\t\t\t\t.ajax({\n");
      out.write("\t\t\t\t\turl : \"http://localhost:8080/web/json/datas\",\n");
      out.write("\t\t\t\t\ttype : 'get',\n");
      out.write("\t\t\t\t\tcontentType : \"application/x-www-form-urlencoded\",\n");
      out.write("\t\t\t\t\tdataType : \"json\",\n");
      out.write("\t\t\t\t\tsuccess : function(data, status) {\n");
      out.write("\t\t\t\t\t\tconsole.log(\"Sucess!!\");\n");
      out.write("\t\t\t\t\t\tconsole.log(data);\n");
      out.write("\t\t\t\t\t\tconsole.log(status);\n");
      out.write("\t\t\t\t\t\tvar temp = new Array();\n");
      out.write("\t\t\t\t\t\ttemp = data.totalAccidents;\n");
      out.write("\t\t\t\t\t\tconsole.log(\"temp\" + temp);\n");
      out.write("\t\t\t\t\t\tvar str = \"\";\n");
      out.write("\t\t\t\t\t\tfor ( var i in temp) {\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"<tr>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"<td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(temp[i].serialnum);\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"<td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(temp[i].latitude);\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"<td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(temp[i].longitude);\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"<td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(temp[i].atime);\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"<td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(temp[i].status);\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"<td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t.concat(\"<form action='/web/webUpdate.in' method='post'>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t.concat(\"<input type='hidden' name='serialnum' value=\"+temp[i].serialnum+\">\");\n");
      out.write("\t\t\t\t\t\t\tif (temp[i].status == \"occured\") {\n");
      out.write("\t\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.concat(\"<input type='hidden' name='status' value=\"+\"processing\"+\">\");\n");
      out.write("\t\t\t\t\t\t\t} else if (temp[i].status == \"processing\") {\n");
      out.write("\t\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.concat(\"<input type='hidden' name='status' value=\"+\"solved\"+\">\");\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.concat(\"<input type='hidden' name='status' value=\"+\"occured\"+\">\");\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\tif (temp[i].status == \"occured\") {\n");
      out.write("\t\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.concat(\"<input type='submit' value=\"+\"processing\"+\">\");\n");
      out.write("\t\t\t\t\t\t\t} else if (temp[i].status == \"processing\") {\n");
      out.write("\t\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.concat(\"<input type='submit' value=\"+\"solved\"+\">\");\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tstr = str\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.concat(\"<input type='submit' value=\"+\"occured\"+\">\");\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</form>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</td>\");\n");
      out.write("\t\t\t\t\t\t\tstr = str.concat(\"</tr>\");\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t$(\"#table1\").append(str).trigger('create');\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\terror : function(xhr, desc, err) {\n");
      out.write("\t\t\t\t\t\tconsole.log(xhr);\n");
      out.write("\t\t\t\t\t\tconsole.log(\"desc: \" + desc + \"\\nErr:\" + err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t})\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body id=\"body\">\n");
      out.write("\t<div class=\"site-content\" role=\"main\">\n");
      out.write("\t\t\t<div class=\"container\">\n");
      out.write("\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t<div class=\"sec-title text-center wow animated fadeInDown\">\n");
      out.write("\t\t\t\t\t\t<h2>Admin Page</h2>\n");
      out.write("\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_sec_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t\t\t님 환영합니다.\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<input type=\"button\" onclick=\"location.href='/web/user/logout'\" class=\"btn btn-blue btn-effect\" value=\"LOGOUT\">\n");
      out.write("\t\t\t\t\t<input type=\"button\" onclick=\"location.href='/web'\" class=\"btn btn-blue btn-effect\" value=\"HOME\">\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<table id=\"table1\"\n");
      out.write("\t\t\t\t\t\tclass=\"table table-bordered wow animated fadeInRight\">\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t<td>serialnum</td>\n");
      out.write("\t\t\t\t\t\t\t<td>latitude</td>\n");
      out.write("\t\t\t\t\t\t\t<td>longitude</td>\n");
      out.write("\t\t\t\t\t\t\t<td>time</td>\n");
      out.write("\t\t\t\t\t\t\t<td>status</td>\n");
      out.write("\t\t\t\t\t\t\t<td>status change</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<section id=\"google_map\">\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"row\">\n");
      out.write("\n");
      out.write("\t\t\t<div id=\"map-canvas\" class=\"wow animated fadeInUp\"></div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</section>\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/css/main_jquery.jsp", out, false);
      out.write("\n");
      out.write("\t\n");
      out.write("    <br>\n");
      out.write("\t\n");
      out.write("</body>\n");
      out.write("<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBjbeIk1uoQYVycQ8q7SHqJKbt3bFlsE5w\"\n");
      out.write("    async defer></script>    \n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_sec_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f0.setParent(null);
      // /WEB-INF/views/user/admin.jsp(95,7) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setProperty("principal.username");
      int _jspx_eval_sec_005fauthentication_005f0 = _jspx_th_sec_005fauthentication_005f0.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f0);
      _jspx_th_sec_005fauthentication_005f0_reused = true;
    } finally {
      if (!_jspx_th_sec_005fauthentication_005f0_reused) {
        _jspx_th_sec_005fauthentication_005f0.release();
        _jsp_getInstanceManager().destroyInstance(_jspx_th_sec_005fauthentication_005f0);
      }
    }
    return false;
  }
}
